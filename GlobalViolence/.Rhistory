me <- system("whoami",intern=TRUE)
# augment this as needed
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
if (me == "sam\\jmaburto"){
setwd("C:/Users/jmaburto/Documents/GitHub/GlobalViolence/GlobalViolence/")
}
install.packages('htmltab')
install.packages('countrycode')
library(htmltab)
library(data.table)
library(countrycode)
library(dplyr)
GPI <- data.table(htmltab("https://en.wikipedia.org/wiki/Global_Peace_Index",2))
GPI.dt         <- melt.data.table(data = GPI,id.vars = 1)
GPI.dt$country <- ifelse(GPI.dt$Country == sort(unique(GPI.dt$Country))[1], substr(GPI.dt$Country,7,nchar(GPI.dt$Country)),
ifelse(GPI.dt$Country == sort(unique(GPI.dt$Country))[2],substr(GPI.dt$Country,5,nchar(GPI.dt$Country)),
substr(GPI.dt$Country,3,nchar(GPI.dt$Country))))
GPI.dt$year    <- as.numeric(substr(GPI.dt$variable,1,4))
GPI.dt$type    <- substr(GPI.dt$variable,6,nchar(as.character(GPI.dt$variable)))
GPI.dt$value   <- as.numeric(GPI.dt$value)
GPI.dt         <- GPI.dt[order(year,country), c('country','year','type','value')]
GPI.dt
# transforming country names into ISO3 codes
GPI_ISO3<-GPI.dt %>%
mutate(ISO3c=countrycode(GPI.dt$country, "country.name", "iso3c")) %>%
mutate(ISO3n=countrycode(GPI.dt$country, "country.name", "iso3n"))
#View(GPI_ISO3)
# TR modified:
dir.create(file.path("Data","Inputs","GPI"), showWarnings = FALSE, recursive = TRUE)
write.table(GPI_ISO3,file.path("Data","Inputs","GPI","GPI_ISO3.csv"), sep = ",", row.names = FALSE)
me <- system("whoami",intern=TRUE)
# augment this as needed
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
if (me == "sam\\jmaburto"){
setwd("C:/Users/jmaburto/Documents/GitHub/GlobalViolence/GlobalViolence/")
}
library(devtools)
install_github("timriffe/DistributionTTD/DistributionTTD/R/DistributionTTD")
install_github("timriffe/DemoTools")
# Author: tim
###############################################################################
me <- system("whoami",intern=TRUE)
# augment this as needed
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
if (me == "sam\\jmaburto"){
setwd("C:/Users/jmaburto/Documents/GitHub/GlobalViolence/GlobalViolence/")
}
library(data.table)
gbd.folder <- file.path("Data","Inputs","GBD")
if (me == "sam\\jmaburto"){
gbd.folder <- 'C:/Users/jmaburto/Documents/AburtoDiLegoRiffe_Data/Inputs/GBD'
}
dir.create(file.path("Data","Grouped","GBD"), showWarnings = FALSE, recursive = TRUE)
GBD <- local(get(load(file.path(gbd.folder,"GBD.Rdata"))))
GBD$Sex <- ifelse(GBD$sex == "Male",1,2)
GBD[,c("sex","measure"):=NULL];gc()
# remove Percent, not needed now.
GBD <- GBD[metric != "Percent"];gc()
GBD[location=="Estonia" & year == 1990 & Sex == 1 & cause == "All causes" & metric == "Number"]$age
rmages <- c("Under 5","Early Neonatal","Late Neonatal","Post Neonatal",
"15-49 years","80 plus","All Ages","5-14 years","15-49 years",
"50-69 years","70+ years","<20 years","10 to 24","10 to 54","Age-standardized")
GBD <- GBD[!age%in%rmages];gc()
#ages <- sort(unique(GBD$age))
#recvec <- c(0,1,seq(5,95,by=5))
#names(recvec) <- ages[c(4,3,13,1,2,5:12,14:21)]
#dput(recvec)
recvec <- c(`<1 year` = 0, `1 to 4` = 1, `5 to 9` = 5, `10 to 14` = 10,
`15 to 19` = 15, `20 to 24` = 20, `25 to 29` = 25, `30 to 34` = 30,
`35 to 39` = 35, `40 to 44` = 40, `45 to 49` = 45, `50 to 54` = 50,
`55 to 59` = 55, `60 to 64` = 60, `65 to 69` = 65, `70 to 74` = 70,
`75 to 79` = 75, `80 to 84` = 80, `85 to 89` = 85, `90 to 94` = 90,
`95 plus` = 95)
GBD$Age <- recvec[GBD$age]
GBD[,c("age"):=NULL];gc()
# More reshaping to match GHE: 3 files with MID, LOW, UPP.
# Can use Rate and Number to recuperate exposure.
# group state violence and terrorism
#recvec <- c("a","w","h","w")
#names(recvec)<- unique(GBD$cause)
#dput(recvec)
recvec <- c(`All causes` = "a", `Conflict and terrorism` = "w", `Interpersonal violence` = "h",
`Executions and police conflict` = "w")
GBD$cause <- recvec[GBD$cause]
# now group causes
GBD <- GBD[,.(val=sum(val),upper=sum(upper),lower=sum(lower)),
by=.(metric,location,year,Sex,cause,Age)];gc()
table(GBD$cause)
# set order for clean chunking
setorder(GBD,metric,location,year,Sex,cause,Age)
NN  <- GBD[metric == "Number"]
GBD <- GBD[metric == "Rate"];gc()
dim(GBD);dim(NN)
# rates split
M   	<- GBD[cause == "a"]
GBD 	<- GBD[cause != "a"]
Mw  	<- GBD[cause == "w"]
Mh 		<- GBD[cause != "w"];gc()
rm(GBD);gc()
# counts split
D   	<- NN[cause == "a"]
NN   	<- NN[cause != "a"]
Dw  	<- NN[cause == "w"]
Dh   	<- NN[cause != "w"];gc() # Dh
rm(NN);gc()
# -----------------------
# MID, LOW, UPP
MID 	<- copy(D)
MID[,c("upper","lower","metric"):=NULL ];gc()
setnames(MID,"val","D")
MID$Dh 	<- Dh$val
MID$Dw 	<- Dw$val
MID$M 	<- M$val / 1e5
MID$Mh 	<- Mh$val / 1e5
MID$Mw 	<- Mw$val / 1e5
Dh[,c("val"):=NULL];D[,c("val"):=NULL];Dw[,c("val"):=NULL]
Mh[,c("val"):=NULL];M[,c("val"):=NULL];Mw[,c("val"):=NULL]
gc()
#DemoTools::LTabr(nMx=MID$M[1:21]/1e5,Age=c(0,1,seq(5,95,by=5)))
save(MID, file = file.path("Data","Grouped","GBD","GBDmid.Rdata"))
rm(MID);gc()
#-----
# LOW
LOW 	<- copy(D)
LOW[,c("upper","metric"):=NULL ];gc()
setnames(LOW,"lower","D")
LOW$Dh 	<- Dh$lower
LOW$Dw 	<- Dw$lower
LOW$M 	<- M$lower / 1e5
LOW$Mh 	<- Mh$lower / 1e5
LOW$Mw 	<- Mw$lower / 1e5
Dh[,c("lower"):=NULL];D[,c("lower"):=NULL];Dw[,c("lower"):=NULL]
Mh[,c("lower"):=NULL];M[,c("lower"):=NULL];Mw[,c("lower"):=NULL]
gc()
save(LOW, file = file.path("Data","Grouped","GBD","GBDlow.Rdata"))
rm(LOW);gc()
#-----
# LOW
UPP 	<- copy(D)
UPP[,c("metric"):=NULL ];gc()
setnames(UPP,"upper","D")
UPP$Dh 	<- Dh$upper
UPP$Dw 	<- Dw$upper
UPP$M 	<- M$upper / 1e5
UPP$Mh 	<- Mh$upper / 1e5
UPP$Mw 	<- Mw$upper / 1e5
save(UPP, file = file.path("Data","Grouped","GBD","GBDupp.Rdata"))
rm(UPP);gc()
rm(Dh,D,Dw,Mh,M,Mw);gc()
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
if (me == "sam\\jmaburto"){
setwd("C:/Users/jmaburto/Documents/GitHub/GlobalViolence/GlobalViolence/")
}
ibrary(data.table)
library(ungroup)
library(DemoTools)
library(parallel)
install.packages('ungroup')
library(data.table)
library(ungroup)
library(DemoTools)
library(parallel)
ifelse(me == "tim", library(parallel),library(parallelsugar))
ifelse(me == "tim", library(parallel),library(parallelsugar))
graduateSmall <- function(x,y,off1,nlast){
AgeInt <- age2int(x,OAvalue=nlast)
if (sum(y) < 100){
Mi <- splitUniform(Value = y,AgeInt = AgeInt)
return(Mi / off1)
} else {
Mi     <- splitMono(Value = y,AgeInt = AgeInt)
Mii    <- beers(Mi,Age=0:110)
ind <- Mii < 0
if (any(ind)){
Mii[ind] <- Mi[ind]
}
return(rescaleAgeGroups(Mii,rep(1,111),y,AgeInt,recursive=FALSE,splitfun=splitUniform) / off1)
}
}
ungroup.GBD <- function(.SD,omega=110){
x      <- .SD$Age
nlast  <- omega - max(x) + 1
offset <- .SD$D / .SD$M
off1   <- pclm(x=x,y=offset,nlast=nlast,control=list(lambda=1/1e6))$fitted
fac <- ifelse(sum(.SD$D) > 2e6,10,1)
M  <- pclm(x=x,y=.SD$D/fac,nlast=nlast,offset=off1/fac,control=list(lambda=1/1e6))$fitted
M[is.nan(M)] <- 0
Mh <- c(graduateSmall(x,.SD$Dh,off1,nlast))
Mw <- c(graduateSmall(x,.SD$Dw,off1,nlast))
data.table(data.frame(
location=rep(.SD$location[1],111),
year=rep(.SD$year[1],111),
Sex =rep(.SD$Sex[1],111),
Age=0:110,
M=M,Mh=Mh,Mw=Mw))
}
dir.create(file.path("Data","Single","GBD"), showWarnings = FALSE, recursive = TRUE)
gbd.folder <- file.path("Data","Grouped","GBD")
variants <- c("low","mid","upp")
# takes a long time to run
for (i in 1:length(variants)){
GBDi <- local(get(load(file.path("Data","Grouped","GBD",paste0("GBD",variants[i],".Rdata")))))
sdl  <- split(GBDi,list(GBDi$location,GBDi$Sex,GBDi$year))
sdl  <- mclapply(sdl, ungroup.GBD, mc.cores = 3)
GBDi <- rbindlist(sdl)
rm(sdl);gc()
save(GBDi,file=file.path("Data","Single","GBD",paste0("GBD",variants[i],".Rdata")))
rm(GBDi);gc()
}
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
if (me == "sam\\jmaburto"){
setwd("C:/Users/jmaburto/Documents/GitHub/GlobalViolence/GlobalViolence/")
}
library(data.table)
load('Data/Single/GBD/GBDmid.Rdata')
View(GBDi)
# Author: tim
###############################################################################
me <- system("whoami",intern=TRUE)
# change this as needed
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
source("R/Functions.R")
# install if necessary
#library(devtools)
#install_github("timriffe/DistributionTTD/DistributionTTD/R/DistributionTTD")
#install_github("timriffe/DemoTools")
library(DistributionTTD)
library(DemoTools)
library(data.table)
dir.create(file.path("Data","Results","GBD"), showWarnings = FALSE, recursive = TRUE)
# for now just GBD
variants <- c("low","mid","upp")
for (i in 1:length(variants)){
GBDi <- local(get(load(file.path("Data","Single","GBD",paste0("GBD",variants[i],".Rdata")))))
GBDi[,sdx:=mx2sd(M),.(location,year,Sex)]
GBDi[,sdx_no_h:=mx2sd(M-Mh),.(location,year,Sex)]
GBDi[,sdx_no_hw:=mx2sd(M-Mh-Mw),.(location,year,Sex)]
GBDi[,edx:=mx2edagger(M),.(location,year,Sex)]
GBDi[,edx_no_h:=mx2edagger(M-Mh),.(location,year,Sex)]
GBDi[,edx_no_hw:=mx2edagger(M-Mh-Mw),.(location,year,Sex)]
GBDi[,ex:=mx2ex(M),.(location,year,Sex)]
GBDi[,ex_no_h:=mx2ex(M-Mh),.(location,year,Sex)]
GBDi[,ex_no_hw:=mx2ex(M-Mh-Mw),.(location,year,Sex)]
save(GBDi, file = file.path("Data","Results","GBD",paste0("GBD",variants[i],".Rdata")))
rm(GBDi);gc()
}
# ISO Codes for mapping. This should be earlier in processing, move at some point.
ISO <- read.csv(file.path("Data","Inputs","GBD","GBD_ISO3.csv"),stringsAsFactors=FALSE)
recvec <- ISO[,2]
names(recvec) <- ISO[,1]
for (i in 1:length(variants)){
GBDi <- local(get(load(file.path("Data","Results","GBD",paste0("GBD",variants[i],".Rdata")))))
GBDi$ISO3 <- recvec[GBDi$location]
save(GBDi, file = file.path("Data","Results","GBD",paste0("GBD",variants[i],".Rdata")))
rm(GBDi);gc()
}
load('Data/Results/GBD/GBDmid.Rdata')
me <- system("whoami",intern=TRUE)
# augment this as needed
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
library(data.table)
# get the GPI data
GPI      <- read.csv(file.path("Data","Inputs","GPI","GPI_ISO3.csv"),stringsAsFactors=FALSE)
setnames(GPI,"ISO3c","ISO3")
GPI      <- data.table(GPI)
GPIi <- GPI[type == "score"]
GBD  <- merge(GBD,GPIi[,c(2,4,5)])
GBD  <- merge(GBDi,GPIi[,c(2,4,5)])
GBD
setnames(GBD,"value","GPI")
GBD[year == 2017 & Age == 5]
map.dt <- GBD[year == 2017 & Age == 5]
gdata:: keep(map.dt, sure = T)
map.dt[ISO3 == "AFG"]
View(map.dt)
map.dt[ISO3 == "IRL"]
map.dt <- GBD[year == 2017 & Age == 10]
#Some ANALYSIS
# augment this as needed
if (me == "tim"){
setwd("/home/tim/git/GlobalViolence/GlobalViolence")
}
if (me == "sam\\jmaburto"){
setwd("C:/Users/jmaburto/Documents/GitHub/GlobalViolence/GlobalViolence/")
}
library(data.table)
load('Data/Results/GBD/GBDmid.Rdata')
# get the GPI data
GPI      <- read.csv(file.path("Data","Inputs","GPI","GPI_ISO3.csv"),stringsAsFactors=FALSE)
setnames(GPI,"ISO3c","ISO3")
GPI      <- data.table(GPI)
GPIi <- GPI[type == "score"]
GBD  <- merge(GBDi,GPIi[,c(2,4,5)])
setnames(GBD,"value","GPI")
#Data in maps
map.dt <- GBD[year == 2017 & Age == 10]
map.dt
map.dt[Sex =- 1]
map.dt[Sex == 1]
map.dt[order(sdx),]
map.dt[order(-sdx),]
map.dt[order(-sdx),1:50,]
map.dt[order(-sdx),]
map.dt <- map.dt[order(-sdx),]
map.dt
map.dt.males <- map.dt[Sex == 1]
map.dt.males
map.dt.males[1:25,]
